{"version":3,"sources":["model/modelbase.js"],"names":["ModelBase","obj","updateWith","JSON","stringify","toObject","props","$obj","name","name_","title","title_","description","description_","result","trim","slice","toUpperCase","constructor","toJSON","undefined"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;;;;;IAEaA,S,WAAAA,S;AACX,qBAAYC,GAAZ,EAAiB;AAAA;;AACf,QAAIA,GAAJ,EAAS;AACP,WAAKC,UAAL,CAAgBD,GAAhB;AACD;AACF;;;;+BAgBU;AACT,aAAOE,KAAKC,SAAL,CAAe,KAAKC,QAAL,EAAf,CAAP;AACD;;;+BAEU;AACT,UAAIC,QAAQ,KAAKC,IAAjB;AACA,aAAO;AACLC,cAAMF,MAAME,IAAN,IAAcF,MAAMG,KADrB;AAELC,eAAOJ,MAAMI,KAAN,IAAeJ,MAAMK,MAFvB;AAGLC,qBAAaN,MAAMM,WAAN,IAAqBN,MAAMO;AAHnC,OAAP;AAKD;;;6BAEQ;AACP,UAAIP,QAAQ,KAAKC,IAAjB;AACA,aAAO;AACLC,cAAMF,MAAMG,KADP;AAELC,eAAOJ,MAAMK,MAFR;AAGLC,qBAAaN,MAAMO;AAHd,OAAP;AAKD;;;+BAEUZ,G,EAAK;AACd,UAAIA,GAAJ,EAAS;;AAEP,YAAMa,SAAS,KAAKP,IAAL,gBAAgB,KAAKA,IAArB,IAA6B,EAA5C;;AAEA,YAAIE,QAAQR,IAAIO,IAAhB;AACA,YAAIG,SAASV,IAAIS,KAAjB;AACA,YAAIG,eAAeZ,IAAIW,WAAvB;;AAEA,YAAIJ,OAAO,yBAAUC,MAAMM,IAAN,EAAV,CAAX;;AAEA,YAAIL,QAAQC,SAASA,OAAOI,IAAP,EAAT,GAAyB,EAArC;;AAEA,YAAIH,cAAcC,eAAeA,aAAaE,IAAb,EAAf,GAAqC,EAAvD;;AAEA,YAAI,CAACL,KAAL,EAAY;AACVA,kBAAQ,0BAAWF,IAAX,EAAiB,GAAjB,CAAR;AACD;AACDE,gBAASA,MAAMM,KAAN,CAAY,CAAZ,EAAc,CAAd,CAAD,CAAmBC,WAAnB,KAAmCP,MAAMM,KAAN,CAAY,CAAZ,CAA3C;;AAEA,YAAI,CAACJ,WAAL,EAAkB;AAChBA,wBAAcF,SAASC,MAAvB;AACD;AACDC,sBAAeA,YAAYI,KAAZ,CAAkB,CAAlB,EAAoB,CAApB,CAAD,CAAyBC,WAAzB,KAAyCL,YAAYI,KAAZ,CAAkB,CAAlB,CAAvD;;AAEAF,eAAOL,KAAP,GAAeA,KAAf;AACAK,eAAON,IAAP,GAAcA,IAAd;;AAEAM,eAAOH,MAAP,GAAgBA,MAAhB;AACAG,eAAOJ,KAAP,GAAeA,KAAf;;AAEAI,eAAOD,YAAP,GAAsBA,YAAtB;AACAC,eAAOF,WAAP,GAAqBA,WAArB;;AAEA,aAAKL,IAAL,gBACKO,MADL;AAGD;AACF;;;4BAEO;AACN,aAAO,IAAI,KAAKI,WAAT,CAAqB,KAAKC,MAAL,EAArB,CAAP;AACD;;;wBA9EU;AACT,aAAO,KAAKZ,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAtB,GAA6BY,SAApC;AACD;;;wBAEW;AACV,UAAId,QAAQ,KAAKC,IAAjB;AACA,aAAO,KAAKA,IAAL,GAAaD,MAAMI,KAAN,IAAeJ,MAAMK,MAAlC,GAA4CS,SAAnD;AACD;;;wBAEiB;AAChB,UAAId,QAAQ,KAAKC,IAAjB;AACA,aAAO,KAAKA,IAAL,GAAaD,MAAMM,WAAN,IAAqBN,MAAMO,YAAxC,GAAwDO,SAA/D;AACD","file":"model/modelbase.js","sourcesContent":["import camelcase from 'camelcase';\nimport decamelize from 'decamelize';\n\nexport class ModelBase {\n  constructor(obj) {\n    if (obj) {\n      this.updateWith(obj);\n    }\n  }\n\n  get name() {\n    return this.$obj ? this.$obj.name : undefined;\n  }\n\n  get title() {\n    let props = this.$obj;\n    return this.$obj ? (props.title || props.title_) : undefined;\n  }\n\n  get description() {\n    let props = this.$obj;\n    return this.$obj ? (props.description || props.description_) : undefined;\n  }\n\n  toString() {\n    return JSON.stringify(this.toObject());\n  }\n\n  toObject() {\n    let props = this.$obj;\n    return {\n      name: props.name || props.name_,\n      title: props.title || props.title_,\n      description: props.description || props.description_,\n    };\n  }\n\n  toJSON() {\n    var props = this.$obj;\n    return {\n      name: props.name_,\n      title: props.title_,\n      description: props.description_,\n    };\n  }\n\n  updateWith(obj) {\n    if (obj) {\n\n      const result = this.$obj ? {...this.$obj} : {};\n\n      let name_ = obj.name;\n      let title_ = obj.title;\n      let description_ = obj.description;\n\n      let name = camelcase(name_.trim());\n\n      let title = title_ ? title_.trim() : '';\n\n      let description = description_ ? description_.trim() : '';\n\n      if (!title) {\n        title = decamelize(name, ' ');\n      }\n      title = (title.slice(0,1)).toUpperCase() + title.slice(1);\n\n      if (!description) {\n        description = title || title_;\n      }\n      description = (description.slice(0,1)).toUpperCase() + description.slice(1);\n\n      result.name_ = name_;\n      result.name = name;\n\n      result.title_ = title_;\n      result.title = title;\n\n      result.description_ = description_;\n      result.description = description;\n\n      this.$obj = {\n        ...result\n      };\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.toJSON());\n  }\n}\n"],"sourceRoot":"/source/"}