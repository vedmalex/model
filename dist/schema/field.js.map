{"version":3,"sources":["schema/field.js"],"names":["FieldSchema","id","title","description","properties","type","name","entity","enum","default","anyOf","identity","required","indexed","relation","$ref","additionalProperties"],"mappings":";;;;;AAAO,IAAMA,oCAAc;AACzBC,MAAI,QADqB;AAEzBC,SAAO,OAFkB;AAGzBC,eAAa,kBAHY;AAIzBC,cAAY;AACVF,WAAO;AACLG,YAAM;AADD,KADG;AAIVC,UAAM;AACJD,YAAM;AADF,KAJI;AAOVF,iBAAa;AACXE,YAAM;AADK,KAPH;AAUVE,YAAQ;AACNF,YAAM;AADA,KAVE;AAaVA,UAAM;AACJG,YAAM,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,QAAjC,CADF;AAEJC,eAAS;AAFL,KAbI;AAiBVA,aAAS;AACPJ,YAAM;AACJK,eAAO,CACL,EAAEL,MAAM,SAAR,EADK,EAEL,EAAEA,MAAM,QAAR,EAFK,EAGL,EAAEA,MAAM,SAAR,EAHK,EAIL,EAAEA,MAAM,QAAR,EAJK,EAKL,EAAEA,MAAM,MAAR,EALK,EAML,EAAEA,MAAM,QAAR,EANK;AADH;AADC,KAjBC;AA6BVM,cAAU,EAAEN,MAAM,SAAR,EAAmBI,SAAS,KAA5B,EA7BA;AA8BVG,cAAU,EAAEP,MAAM,SAAR,EAAmBI,SAAS,KAA5B,EA9BA;AA+BVI,aAAS,EAAER,MAAM,SAAR,EAAmBI,SAAS,KAA5B,EA/BC;AAgCVK,cAAU;AACRT,YAAM;AACJK,eAAO,CACL;AACEK,gBAAM;AADR,SADK,EAGF;AACDA,gBAAM;AADL,SAHE,EAKF;AACDA,gBAAM;AADL,SALE,EAOF;AACDA,gBAAM;AADL,SAPE;AADH;AADE;AAhCA,GAJa;AAoDzBH,YAAU,CAAC,MAAD,CApDe;AAqDzBI,wBAAsB;AArDG,CAApB","file":"schema/field.js","sourcesContent":["export const FieldSchema = {\n  id: '/Field',\n  title: 'Field',\n  description: 'field definition',\n  properties: {\n    title: {\n      type: 'string',\n    },\n    name: {\n      type: 'string'\n    },\n    description: {\n      type: 'string',\n    },\n    entity: {\n      type: 'string',\n    },\n    type: {\n      enum: ['integer', 'number', 'boolean', 'string'],\n      default: 'string',\n    },\n    default: {\n      type: {\n        anyOf: [\n          { type: 'integer' },\n          { type: 'number' },\n          { type: 'boolean' },\n          { type: 'string' },\n          { type: 'null' },\n          { type: 'object' }\n        ]\n      }\n    },\n    identity: { type: 'boolean', default: false },\n    required: { type: 'boolean', default: false },\n    indexed: { type: 'boolean', default: false },\n    relation: {\n      type: {\n        anyOf: [\n          {\n            $ref: '/BelongsTo',\n          }, {\n            $ref: '/HasOne',\n          }, {\n            $ref: '/HasMany',\n          }, {\n            $ref: '/BelongsToMany',\n          }\n        ]\n      }\n    }\n  },\n  required: ['name'],\n  additionalProperties: false,\n};\n"],"sourceRoot":"/source/"}