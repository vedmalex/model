{"version":3,"sources":["model/belongstomany.js"],"names":[],"mappings":"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","file":"model/belongstomany.js","sourcesContent":["import {RefBase} from './refbase';\nimport {BelongsToManySchema} from '../schema';\nimport {validator} from '../validator';\nimport {REF_PATTERN} from './definitions';\nimport {Ref} from './ref';\nimport camelcase from 'camelcase';\n\nexport class BelongsToMany extends RefBase {\n\n  static compose(props, children) {\n    let result = {\n      ...props,\n    };\n    if (result.ref && !result.belongsToMany) {\n      result.belongsToMany = result.ref;\n      delete result.ref;\n    }\n    return result;\n  }\n\n  constructor(obj) {\n    super(obj);\n  }\n\n  get belongsToMany() {\n    return this.$obj ? this.$obj.belongsToMany : undefined;\n  }\n\n  get using() {\n    return this.$obj ? this.$obj.using : undefined;\n  }\n\n  get ref() {\n    return this.$obj ? this.$obj.belongsToMany : undefined;\n  }\n\n  validateSchema(obj) {\n    const validation = validator.validate(obj, BelongsToManySchema);\n    if (!validation.valid) {\n      throw new Error(validation.toString());\n    }\n  }\n\n  updateWith(obj) {\n    if (obj) {\n      super.updateWith(obj);\n\n      const result = this.$obj ? {...this.$obj} : {};\n\n      let belongsToMany_ = obj.belongsToMany;\n\n      let using_ = obj.using;\n\n      let belongsToMany;\n      if (belongsToMany_) {\n        belongsToMany = new Ref();\n        let res = belongsToMany_.match(REF_PATTERN);\n        belongsToMany.entity = res[1] || obj.entity;\n        belongsToMany.field = res[2] ? camelcase(res[2].trim()) : '';\n      }\n\n      let using;\n      if (using_) {\n        using = new Ref();\n        let res = using_.match(REF_PATTERN);\n        using.entity = res[1] || obj.name || obj.entity;\n        using.field = res[2] ? camelcase(res[2].trim()) : obj.entity.toLowerCase();\n      } else {\n        using = new Ref(`${obj.name || obj.entity}#${obj.entity.toLowerCase()}`);\n      }\n\n      if (!obj.name_ && using) {\n        result.name = using.entity;\n      }\n\n      result.belongsToMany_ = belongsToMany_;\n      result.belongsToMany = belongsToMany;\n\n      result.using_ = using_;\n      result.using = using;\n\n      this.$obj = {\n        ...result\n      };\n    }\n  }\n  // it get fixed object\n  toObject() {\n    let props = this.$obj;\n    let res = super.toObject();\n    return JSON.parse(JSON.stringify({\n      ...res,\n      belongsToMany: props.belongsToMany ? props.belongsToMany.toString() : undefined,\n      using: props.using ? props.using.toString() : undefined,\n    }));\n  }\n\n  // it get clean object with no default values\n  toJSON() {\n    var props = this.$obj;\n    let res = super.toJSON();\n    return JSON.parse(JSON.stringify({\n      ...res,\n      belongsToMany: props.belongsToMany_,\n      using: props.using_,\n    }));\n  }\n}\n"],"sourceRoot":"/source/"}