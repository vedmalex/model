{"version":3,"sources":["model/refbase.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAIa;AACX,WADW,OACX,CAAY,GAAZ,EAAiB;0BADN,SACM;;AACf,QAAI,GAAJ,EAAS;AACP,WAAK,UAAL,CAAgB,GAAhB,EADO;KAAT;GADF;;eADW;;+BAWA;AACT,aAAO,KAAK,SAAL,CAAe,KAAK,QAAL,EAAf,CAAP,CADS;;;;+BAIA;AACT,UAAI,QAAQ,KAAK,IAAL,CADH;AAET,aAAO;AACL,cAAM,MAAM,IAAN,IAAc,MAAM,KAAN;OADtB,CAFS;;;;6BAOF;AACP,UAAI,QAAQ,KAAK,IAAL,CADL;AAEP,aAAO;AACL,cAAM,MAAM,KAAN;OADR,CAFO;;;;mCAOM,KAAK;AAClB,UAAM,aAAa,qBAAU,QAAV,CAAmB,GAAnB,wBAAb,CADY;AAElB,UAAI,CAAC,WAAW,KAAX,EAAkB;AACrB,cAAM,IAAI,KAAJ,CAAU,WAAW,QAAX,EAAV,CAAN,CADqB;OAAvB;;;;+BAKS,KAAK;AACd,UAAI,GAAJ,EAAS;;AAEP,YAAM,SAAS,KAAK,IAAL,gBAAgB,KAAK,IAAL,CAAhB,GAA6B,EAA7B,CAFR;;AAIP,aAAK,cAAL,CAAoB,GAApB,EAJO;;AAMP,YAAI,QAAQ,IAAI,IAAJ,CANL;;AAQP,YAAI,OAAO,OAAO,yBAAU,MAAM,IAAN,EAAV,CAAP,GAAiC,IAAjC,CARJ;;AAUP,eAAO,KAAP,GAAe,KAAf,CAVO;AAWP,eAAO,IAAP,GAAc,IAAd,CAXO;;AAaP,aAAK,IAAL,gBACK,OADL,CAbO;OAAT;;;;4BAmBM;AACN,aAAO,IAAI,KAAK,WAAL,CAAiB,KAAK,MAAL,EAArB,CAAP,CADM;;;;wBAjDG;AACT,aAAO,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,IAAV,GAAiB,SAA7B,CADE;;;;SAPA","file":"model/refbase.js","sourcesContent":["import {RefBaseSchema} from '../schema';\nimport {validator} from '../validator';\nimport camelcase from 'camelcase';\n\nexport class RefBase {\n  constructor(obj) {\n    if (obj) {\n      this.updateWith(obj);\n    }\n  }\n\n  get name() {\n    return this.$obj ? this.$obj.name : undefined;\n  }\n\n  toString() {\n    return JSON.stringify(this.toObject());\n  }\n\n  toObject() {\n    let props = this.$obj;\n    return {\n      name: props.name || props.name_,\n    };\n  }\n\n  toJSON() {\n    var props = this.$obj;\n    return {\n      name: props.name_,\n    };\n  }\n\n  validateSchema(obj) {\n    const validation = validator.validate(obj, RefBaseSchema);\n    if (!validation.valid) {\n      throw new Error(validation.toString());\n    }\n  }\n\n  updateWith(obj) {\n    if (obj) {\n\n      const result = this.$obj ? {...this.$obj} : {};\n\n      this.validateSchema(obj);\n\n      let name_ = obj.name;\n\n      let name = name ? camelcase(name_.trim()) : name;\n\n      result.name_ = name_;\n      result.name = name;\n\n      this.$obj = {\n        ...result\n      };\n    }\n  }\n\n  clone() {\n    return new this.constructor(this.toJSON());\n  }\n}\n"],"sourceRoot":"/source/"}