{"version":3,"sources":["model/fieldbase.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAIa;;;AACX,WADW,SACX,CAAY,GAAZ,EAAiB;0BADN,WACM;;kEADN,sBAEH,MADS;GAAjB;;eADW;;mCAKI,KAAK;AAClB,UAAM,aAAa,qBAAU,QAAV,CAAmB,GAAnB,sBAAb,CADY;AAElB,UAAI,CAAC,WAAW,KAAX,EAAkB;AACrB,cAAM,IAAI,KAAJ,CAAU,WAAW,QAAX,EAAV,CAAN,CADqB;OAAvB;;;;+BASS,KAAK;AACd,UAAI,GAAJ,EAAS;AACP,mCAlBO,qDAkBU,IAAjB,CADO;;AAGP,YAAM,SAAS,KAAK,IAAL,gBAAgB,KAAK,IAAL,CAAhB,GAA6B,EAA7B,CAHR;;AAKP,YAAI,UAAU,IAAI,MAAJ,CALP;AAMP,YAAI,SAAS,OAAT,CANG;;AAQP,eAAO,MAAP,GAAgB,MAAhB,CARO;AASP,eAAO,OAAP,GAAiB,OAAjB,CATO;;AAWP,aAAK,IAAL,gBACK,OADL,CAXO;OAAT;;;;;;;+BAkBS;AACT,UAAI,QAAQ,KAAK,IAAL,CADH;AAET,UAAI,iCArCK,kDAqCL,CAFK;AAGT,aAAO,KAAK,KAAL,CAAW,KAAK,SAAL,cACb;AACH,gBAAQ,MAAM,MAAN,IAAgB,MAAM,OAAN;QAFR,CAAX,CAAP,CAHS;;;;;;;6BAUF;AACP,UAAI,QAAQ,KAAK,IAAL,CADL;AAEP,UAAI,iCA/CK,gDA+CL,CAFG;AAGP,aAAO,KAAK,KAAL,CAAW,KAAK,SAAL,cACb,IADa,CAAX,CAAP,CAHO;;;;wBAjCI;AACX,aAAO,KAAK,IAAL,GAAY,KAAK,IAAL,CAAU,MAAV,GAAmB,SAA/B,CADI;;;;SAZF","file":"model/fieldbase.js","sourcesContent":["import {ModelBase} from './modelbase';\nimport {validator} from '../validator';\nimport {FieldSchema} from '../schema';\n\nexport class FieldBase extends ModelBase {\n  constructor(obj) {\n    super(obj);\n  }\n\n  validateSchema(obj) {\n    const validation = validator.validate(obj, FieldSchema);\n    if (!validation.valid) {\n      throw new Error(validation.toString());\n    }\n  }\n\n  get entity() {\n    return this.$obj ? this.$obj.entity : undefined;\n  }\n\n  updateWith(obj) {\n    if (obj) {\n      super.updateWith(obj);\n\n      const result = this.$obj ? {...this.$obj} : {};\n\n      let entity_ = obj.entity;\n      let entity = entity_;\n\n      result.entity = entity;\n      result.entity_ = entity_;\n\n      this.$obj = {\n        ...result\n      };\n    }\n  }\n\n  // it get fixed object\n  toObject() {\n    let props = this.$obj;\n    let res = super.toObject();\n    return JSON.parse(JSON.stringify({\n      ...res,\n      entity: props.entity || props.entity_ ,\n    }));\n  }\n\n  // it get clean object with no default values\n  toJSON() {\n    let props = this.$obj;\n    let res = super.toJSON();\n    return JSON.parse(JSON.stringify({\n      ...res,\n      // entity: props.entity_,\n    }));\n  }\n}\n"],"sourceRoot":"/source/"}