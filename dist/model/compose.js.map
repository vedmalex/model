{"version":3,"sources":["model/compose.js"],"names":["compose","T_","props","T","toLowerCase","attr"],"mappings":";;;;;QAQgBA,O,GAAAA,O;;AARhB;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,SAASA,OAAT,CAAiBC,EAAjB,EAAqBC,KAArB,EAAqC;AAC1C,MAAIC,UAAJ;AACA,MAAI,YAAY,OAAOF,EAAvB,EAA2B;AACzB,YAAQA,GAAGG,WAAH,EAAR;AACE,WAAK,QAAL;AACED;AACF;AACA,WAAK,OAAL;AACEA;AACF;AACA,WAAK,QAAL;AACEA;AACF;AACA,WAAK,SAAL;AACEA;AACF;AACA,WAAK,WAAL;AACEA;AACF;AACA,WAAK,eAAL;AACEA;AACF;AACA,WAAK,OAAL;AACA,WAAK,cAAL;AACEA;AACF;AAtBF;AAwBD,GAzBD,MAyBO;AACLA,QAAIF,EAAJ;AACD;;AA7ByC,oCAANI,IAAM;AAANA,QAAM;AAAA;;AA8B1C,SAAOF,EAAEH,OAAF,CAAUE,KAAV,EAAiBG,IAAjB,CAAP;AACD","file":"model/compose.js","sourcesContent":["import {Entity} from './entity';\nimport {Field} from './field';\nimport {ModelPackage} from './modelpackage';\nimport {HasOne} from './hasone';\nimport {HasMany} from './hasmany';\nimport {BelongsTo} from './belongsto';\nimport {BelongsToMany} from './belongstomany';\n\nexport function compose(T_, props, ...attr) {\n  let T;\n  if ('string' == typeof T_) {\n    switch (T_.toLowerCase()){\n      case 'entity':\n        T = Entity;\n      break;\n      case 'field':\n        T = Field;\n      break;\n      case 'hasone':\n        T = HasOne;\n      break;\n      case 'hasmany':\n        T = HasMany;\n      break;\n      case 'belongsto':\n        T = BelongsTo;\n      break;\n      case 'belongstomany':\n        T = BelongsToMany;\n      break;\n      case 'model':\n      case 'modelPackage':\n        T = ModelPackage;\n      break;\n    }\n  } else {\n    T = T_;\n  }\n  return T.compose(props, attr);\n};\n"],"sourceRoot":"/source/"}